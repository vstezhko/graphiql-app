{
  "welcomePage": "Welcome page",
  "mainPage": "Main page",
  "en": "en",
  "ru": "ru",
  "english": "English",
  "russian": "Russian",
  "menu": "Menu",
  "signIn": "Sign In",
  "signUp": "Sign Up",
  "logOut": "Log Out",
  "queryEditor": "Query Editor",
  "responseViewer": "Response Viewer",
  "enterEndpoint": "Enter a GraphQL endpoint",
  "enterQuery": "Please enter a query",
  "endpointError": "The endpoint cannot be reached",
  "variables": "Variables",
  "headers": "Headers",
  "vika": "Vika",
  "kseniya": "Kseniya",
  "jenya": "Jenya",
  "prettify": "Prettify",
  "noQuery": "No query to format",
  "invalidJSONHeaders": "Invalid JSON at Headers",
  "invalidJSONVariables": "Invalid JSON at Variables",
  "bracketMismatch": "Brackets mismatch",
  "unexpectedBlock": "Extra symbols at query end",
  "errorSchema": "Schema request error",
  "schema": "Schema",
  "backButton": "Back",
  "rootType": "Root Type",
  "schemaTypes": "All Schema Types",
  "arguments": "Arguments",
  "notFoundTitle": "ERROR 404",
  "notFoundText": "Sorry! Page not found...",
  "errorTitle": "ERROR",
  "errorText": "Something went wrong... We try to fix it!",
  "Email": "Email",
  "Password": "Password",
  "showPassword": "Show password",
  "hidePassword": "Hide password",
  "ConfirmPassword": "Confirm Password",
  "FirebaseErrorAuthInvalidCredential": "Invalid Credential",
  "FirebaseErrorTooManyAttempts": "Too Many Attempts",
  "FirebaseErrorAuthEmailAlreadyInUse": "Email Already In Use",
  "SUBMIT": "SUBMIT",
  "EmailIsRequired": "Email is required",
  "InvalidEmailFormat": "Invalid email format",
  "PasswordIsRequired": "Password is required",
  "Need1Digit": "Need 1 digit",
  "Need1UppercaseAZ": "Need 1 uppercase (A-Z)",
  "Need1LowerCaseAZ": "Need 1 lowercase (a-z)",
  "Min8Characters": "Min 8 characters",
  "Need1SpecialSymbol": "Need 1 special symbol",
  "ConfirmPasswordIsRequired": "Confirm Password is required",
  "PasswordsMustMatch": "Passwords must match",
  "authAndAuth": "Authorization and Authentication:",
  "authAndAuthImplements": "Implements user authentication using Firebase, ensuring secure access to the application.",
  "authAndAuthPrivateRoutes": "Private routes and redirects to the main page upon successful login.",

  "dynamicGraphQL": "Dynamic GraphQL Interaction:",
  "dynamicGraphQLQueryEditor": "Provides a Query editor with prettifying functionality.",
  "dynamicGraphQLVariablesHeaders": "Supports Variables and Headers sections, allowing users to customize requests.",
  "dynamicGraphQLDocumentation": "Displays a Documentation Explorer for schema navigation (lazy-loaded).",
  "dynamicGraphQLResponse": "Response section with a JSON viewer for result visualization.",

  "flexibleAPI": "Flexible API Endpoint Selection:",
  "flexibleAPIEndpointSwitching": "Allows users to switch between different user-specified GraphQL endpoints.",
  "flexibleAPICORS": "Supports any open GraphQL API with CORS compatibility.",

  "userFriendly": "User-Friendly Interface:",
  "userFriendlyStickyHeader": "Sticky header with language toggle, sign-out option, and animated styling.",
  "userFriendlyWelcomePage": "Welcome page with Sign In/Sign Up buttons, dynamically updating based on user authentication status.",

  "localizationAndError": "Localization and Error Handling:",
  "localization": "Implements localization with a language toggler in the header.",
  "apiErrors": "Displays API-side errors in a user-friendly format (toast, pop-up).",

  "testingAndQA": "Testing and Quality Assurance:",
  "testCoverage": "Ensures a minimum of 80% test coverage with reporting in the package.json file.",
  "eslintPrettierHusky": "Utilizes ESLint, Prettier, and Husky hooks for code quality.",
  "semanticLayout": "Adheres to semantic layout principles and responsive design for adaptability.",

  "collaborativeDevelopment": "Collaborative Development:",
  "createPrivateRepo": "The team lead creates a private repository on GitHub, invites team members, and establishes a collaborative workflow.",
  "pullRequestInitiated": "A pull request is initiated from the develop to the main branch following completion.",

  "additionalDesign": "Additional Design Considerations:",
  "additionalDesignTypography": "Attention to typography, with a maximum of three fonts per page and a font size of at least 14px.",
  "additionalDesignAdaptiveLayout": "Adaptive layout supporting a minimum page width of 320px.",
  "additionalDesignConsistentStyling": "Consistent styling and unity of elements across all pages for a cohesive user experience.",
  "Contribution": "Contribution",
  "reactAndGraphQLWebApp": "The 'GraphiQL Explorer' is a React and GraphQL-based web app designed to simplify the creation and execution of GraphQL queries.",
  "aboutProject": "About Project",
  "rootsInRschool": "Roots in RS School",
  "meetOurTeam": "Meet Our Team",
  "ourTeamExcellence": "Our team of developers excelled through active and effective communication. We held regular meetings, discussed our ideas, and shared best practices, allowing us to reach a consensus and create a high-quality product. Our openness to feedback and ability to work as a team made our project successful and satisfied our clients' needs.",
  "projectJourney": "Our project's journey began within the nurturing confines of RS School, a program founded by",
  "rollingScopesCommunity": "The Rolling Scopes developer community",
  "rsSchoolFoundedYear": "in 2013.",
  "foundInspirationAndSkills": "It's at RS School that we found the inspiration and skills needed",
  "bringProjectToLife": "to bring this project to life.",
  "equippedWithTechnicalKnowHow": "This school not only equipped us with the technical know-how but also",
  "servedAsMeetingPoint": "served as the meeting point for our team.",
  "immenselyGratefulToMentors": "We are immensely grateful to the mentors who",
  "generouslySharedTheirExpertise": "generously shared their expertise, making this project possible.",
  "pleaseRegisterOrSignIn": "Please register or sign in to test our service.",
  "ifAlreadySignedIn": "You are already logged in, go to the main page and enjoy!",
  "rsLogoAlt": "RS logo",
  "githubAlt": "GitHub logo",
  "teamMemberAlt": "Team member photo"
}
